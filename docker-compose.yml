version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        PHP_VERSION: 8.4
        NODE_VERSION: 22
    container_name: carrental-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-80}:80"
      - "${APP_HTTPS_PORT:-443}:443"
    environment:
      APP_ENV: ${APP_ENV:-production}
      APP_DEBUG: ${APP_DEBUG:-false}
      APP_KEY: ${APP_KEY}
      APP_URL: ${APP_URL:-http://localhost}
      DB_CONNECTION: ${DB_CONNECTION:-mysql}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      DB_DATABASE: ${DB_DATABASE:-carrental}
      DB_USERNAME: ${DB_USERNAME:-root}
      DB_PASSWORD: ${DB_PASSWORD}
      CACHE_DRIVER: ${CACHE_DRIVER:-redis}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION:-redis}
      SESSION_DRIVER: ${SESSION_DRIVER:-redis}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      MAIL_MAILER: ${MAIL_MAILER:-smtp}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT:-587}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION:-tls}
      STRIPE_KEY: ${STRIPE_KEY}
      STRIPE_SECRET: ${STRIPE_SECRET}
    volumes:
      - ./storage:/var/www/html/storage
      - ./public/uploads:/var/www/html/public/uploads
    depends_on:
      - db
      - redis
    networks:
      - carrental-network

  db:
    image: mysql:8.0
    container_name: carrental-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_DATABASE:-carrental}
      MYSQL_USER: ${DB_USERNAME:-carrental}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - carrental-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: carrental-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    networks:
      - carrental-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog:latest
    container_name: carrental-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - carrental-network
    profiles:
      - development

volumes:
  db-data:
    driver: local
  redis-data:
    driver: local

networks:
  carrental-network:
    driver: bridge